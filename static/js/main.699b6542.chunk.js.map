{"version":3,"sources":["actions/constants.js","reducers/currentReducer.js","reducers/listsReducer.js","reducers/tasksReducer.js","reducers/index.js","reducers/queryReducer.js","store/index.js","actions/tasksActions.js","components/Side/Search/Search.js","actions/listsActions.js","actions/currentActions.js","components/Side/Lists/TitleRow.js","components/Side/Lists/TitleRowContainer.js","components/common/DeleteModal.js","components/Side/Lists/RightClickMenuSide.js","components/Side/Lists/RightClickMenuSideContainer.js","components/Side/Lists/TitleList.js","components/Side/Lists/TitleListContainer.js","components/Side/AddList/AddList.js","components/Side/AddList/AddListContainer.js","components/Side/Sidebar.js","components/Side/index.js","actions/queryActions.js","components/Main/Todolist/Body/Task/Status/Completed.js","components/Main/Todolist/Body/Task/Status/Important.js","components/Main/Todolist/Body/Task/Details/Detail.js","components/Main/Todolist/Body/Task/Details/Details.js","components/Main/Todolist/Body/Task/Item.js","components/Main/Todolist/Body/Task/Task.js","components/Main/Todolist/Body/Task/TaskContainer.js","components/Main/Todolist/Body/Task/MenuItem/MarkMyDay.js","components/Main/Todolist/Body/Task/MenuItem/MarkCompleted.js","components/Main/Todolist/Body/Task/MenuItem/MarkImportant.js","components/Main/Todolist/Body/Task/RightClickMenu/RightClickMenu.js","components/Main/Todolist/Body/Task/Tasks.js","components/common/AddButton.js","components/common/AddItem.js","components/common/AddItemContainer.js","components/Main/Todolist/Body/index.js","components/MoreInfo/Header/Status/Completed.js","components/MoreInfo/Header/Status/Important.js","components/MoreInfo/Header/HeaderSection.js","components/MoreInfo/Header/HeaderSectionContainer.js","components/MoreInfo/Body/Steps/Completed.js","components/MoreInfo/Body/Steps/Step.js","components/MoreInfo/Body/Steps/StepContainer.js","components/MoreInfo/Body/Steps/Steps.js","components/MoreInfo/Body/Steps/StepsContainer.js","components/MoreInfo/Body/MyDay/MoreMyDay.js","components/MoreInfo/Body/MyDay/MoreMyDayContainer.js","components/MoreInfo/Body/Planned/PlannedButton.js","components/MoreInfo/Body/Planned/PlannedButtonContainer.js","components/MoreInfo/Body/Planned/DatePicker.js","components/common/MenuTemplate.js","components/MoreInfo/Body/Planned/DateMenu.js","components/MoreInfo/Body/Planned/PlannedMenuContainer.js","components/MoreInfo/Body/Planned/MorePlanned.js","components/MoreInfo/Body/Note/Note.js","components/MoreInfo/Body/Note/NoteContainer.js","components/MoreInfo/Body/BodySection.js","components/MoreInfo/Footer/Completed.js","components/MoreInfo/Footer/FooterSection.js","components/MoreInfo/Footer/FooterSectionContainer.js","components/MoreInfo/MoreInfo.js","components/MoreInfo/MoreInfoContainer.js","components/Main/Results/Results.js","components/Main/Results/ResultsContainer.js","components/Main/Todolist/Header/Title/Name.js","components/Main/Todolist/Header/Title/NameContainer.js","components/Main/Todolist/Header/Title/TodaysDate.js","components/Main/Todolist/Header/Title/MenuButton/todoMenu.js","components/Main/Todolist/Header/Title/MenuButton/HeaderMenuContainer.js","components/Main/Todolist/Header/Title/MenuButton/HeaderButton.js","components/Main/Todolist/Header/Title/index.js","components/Main/Todolist/Header/SortBar/SortBar.js","components/Main/Todolist/Header/SortBar/SortBarContainer.js","components/Main/Todolist/Header/Header.js","components/Main/Todolist/Header/index.js","components/Main/Todolist/TodoList.js","components/Main/Main.js","components/Main/index.js","components/ResponsiveDrawer.js","App.js","index.js"],"names":["constants","SET_LIST","SET_TASK","SET_STEP","SET_NOTE","ADD_STEP","REMOVE_STEP","ADD_LIST","REMOVE_LIST","RENAME_LIST","SET_ORDERBY","SET_ORDERDIR","RESET_ORDERDIR","TOGGLE_HIDE","SET_BGCOLOR","LOAD_TASKS","ADD_TASK","REMOVE_TASK","EDIT_TASK_STATUS_COMPLETE","EDIT_TASK_STATUS_IMPORTANT","EDIT_TASK_STATUS_MYDAY","REMOVE_TASK_DATE_DUE","ADD_TASK_DATE_DUE","UPDATE_TASK","EDIT_STEP_STATUS_COMPLETE","UPDATE_STEP","UPDATE_NOTE","CHANGE_QUERY","CLEAR_QUERY","initialState","step","state","action","type","C","payload","list","todaysDate","moment","Date","format","task","combineReducers","query","current","id","title","taskSteps","note","steps","map","filter","stepId","lists","name","newName","orderBy","sorted","orderDir","hideCompleted","color","tasks","date_created","date_due","temp","my_day","task_id","importantStatus","completedStatus","important","planned","date_completed","date","taskId","item","localStorage","JSON","parse","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","getState","removeTask","toggleCompleted","toggleImportant","toggleMyDay","useStyles","makeStyles","theme","toolbar","mixins","search","position","borderRadius","shape","backgroundColor","fade","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","Search","React","forwardRef","ref","onChange","f","onClear","classes","className","style","margin","fontSize","InputBase","placeholder","root","input","inputProps","inputRef","onClick","changeOrder","setList","setTask","setStep","TitleRow","listIcons","index","headerStyle","iconStyle","numberOfTasks","ListItem","ListItemIcon","defaultList","ListItemText","primary","connect","selectedListId","dispatch","onSetList","onClose","text","join","numOfTasks","toLowerCase","replace","list_id","length","getModalStyle","top","left","transform","paper","palette","background","border","boxShadow","shadows","outline","DeleteModal","location","todo","useState","modalStyle","open","setOpen","Fragment","Modal","aria-labelledby","aria-describedby","fontWeight","DialogActions","Button","autoFocus","RightClickMenuSide","onEditClick","onRemove","onRemoveList","removeList","onRemoveTask","forEach","TitleList","renderLists","List","overflow","paddingBottom","defaults","Divider","customs","defaultLists","customLists","key","AddList","onAddList","addList","namesOnList","setListName","subName","num","includes","newList","uuid","v4","drawer","flexShrink","drawerPaper","Sidebar","aria-label","Hidden","xsDown","implementation","Drawer","variant","onChangeQuery","changeQuery","_searchInput","e","target","value","onToggleComplete","completed","notCompleted","onToggleImportant","notImportant","Detail","el","icon","Icon","paddingTop","selectedList","numOfCompletedSteps","count","details","add","arr","detail","renderDetails","Item","textDecoration","Task","selectedTaskId","onSetTask","onToggleMyDay","removeMyDay","addMyDay","markNotCompleted","markCompleted","removeImportance","markImportant","divider","Tasks","AddButton","addItem","status","AddItem","itemStyle","onSubmit","flex","propTypes","PropTypes","string","isRequired","func","onAddTask","addTask","onAddStep","addStep","_newItem","setItem","borderBottom","preventDefault","newStep","selectedTask","HeaderSection","currentTask","onEnterPress","onKeyDown","onUpdateTask","subTask","which","shiftKey","Completed","onToggleStep","Step","stepContainer","stepStyle","getPlaceholder","onRemoveStep","onSetStep","onKeyPress","currentStep","currentSteps","removeStep","toggleStep","onUpdateStep","updateStep","selected","subStep","Steps","StepsContainer","MoreMyDay","currentList","PlannedButton","onRemoveDateDue","show","getDateDue","removeDateDue","MaterialUIPickers","onAddDateDue","selectedDate","setSelectedDate","utils","DateFnsUtils","label","newDate","KeyboardButtonProps","MenuTemplate","anchorEl","menuArr","renderMenuItems","Menu","getDay","plannedMenu","PlannedMenuContainer","subAnchorEl","subMenuOpen","handleSubItemClick","setState","currentTarget","handleSubMenuClose","handleSort","props","children","MenuItem","caption","size","day","this","dateDueMenu","Component","addDateDue","Planned","setAnchorEl","Boolean","Note","currentNote","onClickAway","onSetNote","ClickAwayListener","setNote","onUpdateNote","updateNote","prev","BodySection","MorePlanned","getFormattedDate","inputDate","created","FooterSection","drawerHeader","flexDirection","More","smDown","anchor","MoreInfo","content","flexGrow","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","Match","filteredTasks","onOpen","clsx","NoMatch","ResultsContainer","Title","NameContainer","onRenameList","Name","test","renameList","TodaysDate","todoMenu","onChangeBgColor","changeBgColor","onChangeOrder","order","onToggleHide","toggleHide","setAnchor","setMenu","setValue","headerMenu","anchorOrigin","vertical","horizontal","transformOrigin","HeaderButton","buttonColor","minWidth","formatColor","secondaryColor","SortBar","barColor","getOrderBy","getDirIcon","onChangeDir","changeDir","resetChangeDir","appBar","appBarShift","drawerWidth","Header","AppBar","HeaderContainer","col","parseInt","TodoList","CssBaseline","Main","MainContainer","indexOf","push","sort","a","b","ResponsiveDrawer","inputEl","useTheme","matches","useMediaQuery","openDrawer","handleDrawerClose","Side","select","App","loadTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.699b6542.chunk.js","sourcesContent":["const constants = {\n    // CURRENT\n    SET_LIST: \"SET_LIST\",\n    SET_TASK: \"SET_TASK\",\n    SET_STEP: \"SET_STEP\",\n    SET_NOTE: \"SET_NOTE\",\n    ADD_STEP: \"ADD_STEP\",\n    REMOVE_STEP: \"REMOVE_STEP\",\n\n    // LIST\n    ADD_LIST: \"ADD_LIST\",\n    REMOVE_LIST: \"REMOVE_LIST\",\n    RENAME_LIST: \"RENAME_LIST\",\n    SET_ORDERBY: \"SET_ORDERBY\",\n    SET_ORDERDIR: \"SET_ORDERDIR\",\n    RESET_ORDERDIR: \"RESET_ORDERDIR\",\n    TOGGLE_HIDE: \"TOGGLE_HIDE\",\n    SET_BGCOLOR: \"SET_BGCOLOR\",\n    \n    // TASK\n    LOAD_TASKS: \"LOAD_TASKS\",\n    ADD_TASK: \"ADD_TASK\",\n    REMOVE_TASK: \"REMOVE_TASK\",\n    EDIT_TASK_STATUS_COMPLETE: \"EDIT_TASK_STATUS_COMPLETE\",\n    EDIT_TASK_STATUS_IMPORTANT: \"EDIT_TASK_STATUS_IMPORTANT\",\n    EDIT_TASK_STATUS_MYDAY: \"EDIT_TASK_STATUS_MYDAY\",\n    REMOVE_TASK_DATE_DUE: \"REMOVE_TASK_DATE_DUE\",\n    ADD_TASK_DATE_DUE: \"ADD_TASK_DATE_DUE\",\n    UPDATE_TASK: \"UPDATE_TASK\",\n    EDIT_STEP_STATUS_COMPLETE: \"EDIT_STEP_STATUS_COMPLETE\",\n    UPDATE_STEP: \"UPDATE_STEP\",\n    UPDATE_NOTE: \"UPDATE_NOTE\",\n\n    // QUERY\n    CHANGE_QUERY: \"CHANGE_QUERY\",\n    CLEAR_QUERY: \"CLEAR_QUERY\"\n}\n\nexport default constants;","import C from '../actions/constants';\n\nconst initialState = {\n    \"list\": {\n        \"id\": \"0\",\n        \"title\": \"My Day\"\n    },\n    \"task\": {\n        \"id\": \"\",\n        \"task\": \"\"\n    },\n    \"step\": {\n        \"id\":\"\",\n        \"step\":\"\"\n    },\n    \"taskSteps\": [],\n    \"note\": \"\"\n}\n\nconst step = (state={}, action) =>\n    (action.type === C.ADD_STEP) ?\n        action.payload :\n        state\n\nexport default (state=initialState, action) => {\n    switch (action.type) {\n        case C.SET_LIST :\n            return {\n                ...state,\n                list: {\n                    id: action.id,\n                    title: action.payload\n                },\n                task: {\n                    id: \"\",\n                    task: \"\"\n                },\n                step: {\n                    id: \"\",\n                    step:\"\"\n                },\n                taskSteps: [],\n                note: \"\"\n            }\n        \n        case C.SET_TASK :\n            return {\n                ...state,\n                task: {\n                    id: action.id,\n                    task: action.payload\n                },\n                step: {\n                    id: \"\",\n                    step: \"\"\n                },\n                taskSteps: action.steps,\n                note: action.note\n            }\n\n        case C.SET_STEP :\n            return {\n                ...state,\n                step: action.payload,\n                taskSteps: state.taskSteps.map(step =>\n                    step.id === action.id ?\n                        action.payload\n                        :\n                        step\n                )\n            }\n                \n        case C.SET_NOTE :\n            return {\n                ...state,\n                note: action.payload\n            }\n        \n        case C.ADD_STEP :\n            return {\n                ...state,\n                taskSteps: [\n                    ...state.taskSteps,\n                    step({}, action)\n                ]\n            }\n\n        case C.REMOVE_STEP :\n            return {\n                ...state,\n                taskSteps: state.taskSteps.filter(step => step.id !== action.stepId)\n            }\n\n        default : \n            return state\n    }\n}","import C from '../actions/constants';\n\nconst initialState = [\n    {\n        \"id\": \"0\",\n        \"name\": \"My Day\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"1\",\n        \"name\": \"Important\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"2\",\n        \"name\": \"Planned\",\n        \"orderBy\": \"date_due\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"3\",\n        \"name\": \"Tasks\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    }\n];\n\nconst list = (state={}, action) =>\n    (action.type === C.ADD_LIST) ?\n        action.payload :\n        state\n\nexport default (state=initialState, action) => {\n    switch(action.type) {\n        case C.ADD_LIST :\n            return [\n                ...state,\n                list(null, action)\n            ]\n        \n        case C.REMOVE_LIST :\n            return state.filter(list => list.id !== action.payload)\n\n        case C.RENAME_LIST :\n            return state.map(list => \n                list.id === action.payload ?\n                {\n                    ...list,\n                    name: action.newName\n                }\n                :\n                list\n            )\n\n        case C.SET_ORDERBY :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        orderBy: action.payload,\n                        sorted: true\n                    }\n                    :\n                    list\n            )\n        \n        case C.SET_ORDERDIR :\n            return state.map(list => \n                list.id === action.id ?\n                    list.orderDir === 'asc' ?\n                        {\n                            ...list,\n                            orderDir: 'desc',\n                            sorted: true\n                        }\n                        :\n                        {\n                            ...list,\n                            orderDir: 'asc',\n                            sorted: true\n                        }\n                    :\n                    list\n            )\n        \n        case C.RESET_ORDERDIR :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        orderDir: 'asc',\n                        sorted: false\n                    }\n                    :\n                    list\n            )\n        \n        case C.TOGGLE_HIDE :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        hideCompleted: !list.hideCompleted\n                    }\n                    :\n                    list\n            )\n        \n        case C.SET_BGCOLOR :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        color: action.payload\n                    }\n                    :\n                    list\n            )\n\n        default :\n            return state\n    }\n}","import C from '../actions/constants';\nimport moment from 'moment';\n\nconst todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\nconst initialState = [];\n\nconst step = (state={}, action) =>\n    (action.type === C.ADD_STEP) ?\n        action.payload :\n        state\n        \nconst task = (state={}, action) =>\n    (action.type === C.ADD_TASK) ?\n        action.payload :\n        state\n\nexport default (state=initialState, action) => {\n    switch(action.type) {\n        case C.ADD_TASK :\n            return [\n                ...state,\n                task(null, action)\n            ]\n        \n        case C.LOAD_TASKS :\n            return state.map(task =>\n                (\n                    task.date_created === todaysDate ||\n                    task.date_due === todaysDate ||\n                    task.temp === todaysDate\n                )?\n                    {\n                        ...task,\n                        my_day: true\n                    }\n                    :\n                    {\n                        ...task,\n                        my_day: false\n                    }\n                )\n        \n        case C.EDIT_TASK_STATUS_COMPLETE :\n            return state.map(task => {\n                if (task.task_id === action.payload) {\n                    if (task.importantStatus && task.date_due) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else if (task.importantStatus) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else if (task.date_due) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    }\n                } else {\n                    return task\n                }\n            })\n\n        case C.EDIT_TASK_STATUS_IMPORTANT :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    task.completedStatus ?\n                        {\n                            ...task,\n                            importantStatus: !task.importantStatus,\n                            important: false\n                        }\n                        :\n                        {\n                            ...task,\n                            importantStatus: !task.importantStatus,\n                            important: !task.important\n                        }\n                    :\n                    task\n                )\n            \n        case C.EDIT_TASK_STATUS_MYDAY :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    task.my_day === true ?\n                        {\n                            ...task,\n                            my_day: !task.my_day,\n                            temp: \"\"\n                        }\n                        :\n                        {\n                            ...task,\n                            my_day: !task.my_day,\n                            temp: todaysDate\n                        }\n                    :\n                    task\n            )            \n            \n        case C.REMOVE_TASK_DATE_DUE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                {\n                    ...task,\n                    date_due: \"\",\n                    planned: false\n                }\n                :\n                task\n            )\n\n        case C.ADD_TASK_DATE_DUE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                {\n                    ...task,\n                    date_due: action.date,\n                    planned: true\n                }\n                :\n                task\n            )\n\n        case C.UPDATE_TASK :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        item: action.payload\n                    }\n                    :\n                    task\n            )    \n\n        case C.SET_NOTE :\n            return state.map(task =>\n                task.task_id === action.id ?\n                {\n                    ...task,\n                    note: action.payload\n                }\n                :\n                task\n            )\n\n        case C.REMOVE_TASK :\n            return state.filter(task => task.task_id !== action.payload)\n            \n        case C.ADD_STEP :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        steps: [\n                            ...task.steps,\n                            step({}, action)\n                        ]\n                    }\n                    :\n                    task\n                )\n        \n        case C.EDIT_STEP_STATUS_COMPLETE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    {\n                        ...task,\n                        steps: task.steps.map(step =>\n                            step.id === action.stepId ?\n                                {\n                                    ...step,\n                                    completedStatus: !step.completedStatus\n                                }\n                                :\n                                step\n                        )\n                    }\n                    :\n                    task\n                )\n\n        case C.UPDATE_STEP :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        steps: task.steps.map(step =>\n                            step.id === action.id ?\n                                {\n                                    ...step,\n                                    step: action.payload\n                                }\n                                :\n                                step\n                        )\n                    }\n                    :\n                    task\n                )\n\n        case C.REMOVE_STEP :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    {\n                        ...task,\n                        steps: task.steps.filter(step => step.id !== action.stepId)\n                    }\n                    :\n                    task\n                )\n            \n        case C.UPDATE_NOTE :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        note: action.payload\n                    }\n                    :\n                    task\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport queryReducer from './queryReducer';\nimport currentReducer from './currentReducer';\nimport listsReducer from './listsReducer';\nimport tasksReducer from './tasksReducer';\n\nexport default combineReducers({\n    query: queryReducer,\n    current: currentReducer,\n    lists: listsReducer,\n    tasks: tasksReducer\n})","import C from '../actions/constants';\n\nconst initialState = \"\";\n\nexport default (state=initialState, action) => {\n\tswitch(action.type) {\n        case C.CHANGE_QUERY :\n            return action.payload\n        \n        case C.CLEAR_QUERY :\n            return ''\n        \n        default :\n            return state\n    }\n}","import rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nconst initialState = (localStorage[\"redux-store\"]) ?\n    JSON.parse(localStorage[\"redux-store\"]) :\n    {};\n\nconst saveState = () => \n    localStorage[\"redux-store\"] = JSON.stringify(store.getState())\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nstore.subscribe(saveState)\n\nexport default store;","import C from '../actions/constants';\n\nexport const loadTasks = () => ({\n    type: C.LOAD_TASKS\n})\n\nexport const addTask = (\n        task_id, item, date_completed, date_created, date_due, temp,\n        completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n    ) => dispatch => {\n    dispatch({\n        type: C.ADD_TASK,\n        payload: {\n            task_id, item, date_completed, date_created, date_due, temp,\n            completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n        }\n    })\n}\n\nexport const removeTask = id => ({\n    type: C.REMOVE_TASK,\n    payload: id\n})\n\nexport const toggleCompleted = id => ({\n    type: C.EDIT_TASK_STATUS_COMPLETE,\n    payload: id\n})\n\nexport const toggleImportant = id => ({\n    type: C.EDIT_TASK_STATUS_IMPORTANT,\n    payload: id\n})\n\nexport const toggleMyDay = id => ({\n    type: C.EDIT_TASK_STATUS_MYDAY,\n    payload: id\n})\n\nexport const removeDateDue = id => ({\n    type: C.REMOVE_TASK_DATE_DUE,\n    payload: id\n})\n\nexport const addDateDue = (id, date) => ({\n    type: C.ADD_TASK_DATE_DUE,\n    payload: id,\n    date\n})\n\nexport const updateTask = (taskId, newTask) => ({\n    type: C.UPDATE_TASK,\n    payload: newTask,\n    taskId\n})\n\nexport const addStep = (completedStatus, id, step, taskId) => dispatch => {\n    dispatch({\n        type: C.ADD_STEP,\n        payload: {completedStatus, id, step, taskId},\n        taskId\n    })\n}\n\nexport const removeStep = (taskId, stepId) => ({\n    type: C.REMOVE_STEP,\n    payload: taskId,\n    stepId\n})\n\nexport const toggleStep = (taskId, stepId) => ({\n    type: C.EDIT_STEP_STATUS_COMPLETE,\n    payload: taskId,\n    stepId\n})\n\nexport const updateStep = (id, step, taskId) => ({\n    type: C.UPDATE_STEP,\n    payload: step, \n    id,\n    taskId\n})\n\nexport const updateNote = (taskId, note) => ({\n    type: C.UPDATE_NOTE,\n    payload: note,\n    taskId\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSearch, FaTimesCircle } from 'react-icons/fa';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade('#787', 0.15),\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '50%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(5),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 6),\n        transition: theme.transitions.create('width'),\n        width: '90%',\n    },\n}));\n\nconst Search = React.forwardRef(({query, onChange=f=>f, onClear=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"search-bar\">\n            <div className={classes.toolbar} />\n\n            <div className={classes.search} style={{width: '90%', margin: 'auto'}}>\n                <div className={classes.searchIcon}>\n                    <FaSearch style={{fontSize: '1rem'}} />\n                </div>\n\n                <InputBase\n                    style={{width: '88%'}}\n                    placeholder=\"Search\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'Search' }}\n                    inputRef={ ref }\n                    onChange={ onChange }\n                />\n\n                { !query ? null : <FaTimesCircle style={{fontSize: '1rem'}} onClick={ onClear } /> }\n            </div>\n        </div>\n    );\n});\n\nSearch.propTypes = {\n    query: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default Search;","import C from './constants';\n\nexport const addList = (id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList) => dispatch => {\n    dispatch({\n        type: C.ADD_LIST,\n        payload: {id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList}\n    })\n}\n\nexport const removeList = id => ({\n    type: C.REMOVE_LIST,\n    payload: id\n})\n\nexport const renameList = (id, newName) => ({\n    type: C.RENAME_LIST,\n    payload: id,\n    newName\n})\n\nexport const changeOrder = (orderBy, id) => ({\n    type: C.SET_ORDERBY,\n    payload: orderBy,\n    id\n})\n\nexport const changeDir = id => ({\n    type: C.SET_ORDERDIR,\n    id\n})\n\nexport const resetChangeDir = id => ({\n    type: C.RESET_ORDERDIR,\n    id\n})\n\nexport const toggleHide = id => ({\n    type: C.TOGGLE_HIDE,\n    id\n})\n\nexport const changeBgColor = (color, id) => ({\n    type: C.SET_BGCOLOR,\n    payload: color,\n    id\n})","import C from '../actions/constants';\n\nexport const setList = (id, title) => ({\n    type: C.SET_LIST,\n    payload: title,\n    id\n})\n\nexport const setTask = (id, task, note, steps) => ({\n    type: C.SET_TASK,\n    payload: task,\n    id,\n    note,\n    steps\n})\n\nexport const setStep = (id, step) => ({\n    type: C.SET_STEP,\n    payload: {id, step},\n    id\n})\n\nexport const setNote = (id, note) => ({\n    type: C.SET_NOTE,\n    payload: note,\n    id\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { FaList } from 'react-icons/fa';\n\nconst TitleRow = ({list, listIcons, index, headerStyle=f=>f, iconStyle=f=>f, numberOfTasks=f=>f, onClick=f=>f}) => (\n    <ListItem style={ headerStyle(list.name) } onClick={ onClick }>\n        <div style={{display: 'flex', alignItems: 'center'}}>\n            <ListItemIcon style={ iconStyle(list.color) }>\n                { list.defaultList ? listIcons[index] : <FaList /> }\n            </ListItemIcon>\n\n            <ListItemText primary={list.name} />\n        </div>\n\n        { numberOfTasks(list.id, list.name) } \n    </ListItem>\n);\n\nTitleRow.propTypes = {\n    list: PropTypes.any,\n    index: PropTypes.any,\n    listIcons: PropTypes.array.isRequired,\n    headerStyle: PropTypes.func.isRequired,\n    iconStyle: PropTypes.func.isRequired,\n    numberOfTasks: PropTypes.func.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default TitleRow;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setList } from '../../../actions/currentActions';\nimport { FaRegSun, FaRegStar, FaRegCalendar, FaRegCalendarCheck } from 'react-icons/fa';\nimport TitleRow from './TitleRow';\n\nconst listIcons = [<FaRegSun />, <FaRegStar />, <FaRegCalendar />, <FaRegCalendarCheck />];\n\nconst TitleRowContainer = ({list, index, lists, query, selectedListId, tasks, onClick=f=>f, onClose=f=>f, onSetList=f=>f}) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n\n    const headerStyle = text => {\n        return {\n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'space-between', \n            backgroundColor: name === text ? 'gainsboro' : null\n        }\n    }\n\n    const iconStyle = color => {\n        return {\n            marginRight: -25, \n            fontSize: '1.2rem',\n            color: 'rgb(' + color.join(',') + ')'\n        }\n    }\n\n    const handleClick = () => {\n        if (query) {\n            onClick()\n        }\n\n        onSetList(list.id, list.name);\n        onClose();\n    }\n\n    const numberOfTasks = (id, name) => {\n        const numOfTasks = tasks.filter(task =>\n            ((task[`${name.toLowerCase().replace(/ /g,\"_\") }`] || task.list_id === id) && !task.completedStatus)\n        ).length\n        \n        return numOfTasks > 0 ?\n            <div style={{color: 'gray'}}>\n                { numOfTasks }\n            </div>\n            :\n            null\n    }\n\n    return (\n        <TitleRow\n            list={ list }\n            index={ index }\n            listIcons={ listIcons }\n            headerStyle={ headerStyle }\n            iconStyle={ iconStyle }\n            numberOfTasks={ numberOfTasks }\n            onClick={ handleClick }\n        />\n    );\n};\n\nTitleRowContainer.propTypes = {\n    list: PropTypes.object.isRequired,\n    index: PropTypes.number.isRequired,\n    lists: PropTypes.array.isRequired,\n    query: PropTypes.string.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSetList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    query: state.query,\n    selectedListId: state.current.list[\"id\"],\n    tasks: state.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetList(id, title) {\n        dispatch(\n            setList(id, title)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleRowContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, DialogActions, Button } from '@material-ui/core';\nimport { FaRegTrashAlt, FaTimes } from 'react-icons/fa';\n\nconst getModalStyle = () => {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n        outline: 'none',\n    },\n}));\n\nconst DeleteModal = ({id, location, name, todo, onClick=f=>f}) => {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const renderDelete = () => {\n        if (location === 'more-bottom') {\n            return <FaRegTrashAlt style={{ margin: '0 5px 3px 0' }} />;\n        } else if (location === 'more-top') {\n            return <FaTimes />;\n        } else {\n            return (\n                <React.Fragment>\n                    <FaRegTrashAlt style={{ margin: '0 5px 3px 0' }} />\n                    <span>Delete {todo}</span>\n                </React.Fragment>\n            );\n        };\n    };\n\n    return (\n        <React.Fragment>\n            <div id={`${todo}_${id}`} onClick={handleOpen}>\n                { renderDelete() }\n            </div>\n            \n            <Modal\n                aria-labelledby={`item-${todo}_${id}`}\n                aria-describedby={`content-${todo}_${id}`}\n                open={open}>\n\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id={`item-${todo}_${id}`} style={{fontSize: '1rem', fontWeight: 'bold'}}>\n                        \"{ name }\" will be permanently deleted.\n                    </h2>\n\n                    <p id={`content-${todo}_${id}`}>\n                        You won't be able to undo this action.\n                    </p>\n                    \n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n\n                        <Button onClick={onClick} color=\"primary\" autoFocus=\"true\">\n                            Delete { todo }\n                        </Button>\n                    </DialogActions>\n                </div>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nDeleteModal.propTypes = {\n    id: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    todo: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default DeleteModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport { FaRegEdit } from 'react-icons/fa';\nimport TitleRow from './TitleRowContainer';\nimport DeleteModal from '../../common/DeleteModal';\n\nconst RightClickMenuSide = ({list, onClick=f=>f, onClose=f=>f, onEditClick=f=>f, onRemove=f=>f}) => (\n    <React.Fragment>\n        <ContextMenuTrigger id={list.id}>\n            <TitleRow\n                list={ list }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n        </ContextMenuTrigger>\n\n        <ContextMenu id={list.id}>\n            <MenuItem onClick={ onEditClick }>\n                <FaRegEdit className=\"list-icon\" style={{margin: '0 5px 3px 0'}} />\n                <span>Rename list</span>\n            </MenuItem>\n\n            <MenuItem>\n                <DeleteModal\n                    id={ list.id }\n                    location={ 'side-rightclick' }\n                    name={ list.name }\n                    todo={ 'list'}\n                    onClick={ onRemove }\n                />\n            </MenuItem>\n        </ContextMenu>\n    </React.Fragment>\n);\n\nRightClickMenuSide.propTypes = {\n    list: PropTypes.any,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n};\n\nexport default RightClickMenuSide;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeList } from '../../../actions/listsActions';\nimport { setList } from '../../../actions/currentActions';\nimport { removeTask } from '../../../actions/tasksActions';\nimport RightClickMenuSide from './RightClickMenuSide';\n\nconst RightClickMenuSideContainer = ({list, tasks, onClick=f=>f, onClose=f=>f, onEditClick=f=>f, onRemoveList=f=>f, onRemoveTask=f=>f}) => {\n    const removeTasks = () => {\n        const listTasks = tasks.filter(task => task.list_id === list.id);\n\n        listTasks.forEach(task => onRemoveTask(task.task_id))\n    }\n\n    const removeAll = () => {\n        removeTasks();\n        onRemoveList(list.id);\n    }\n\n    return (\n        <RightClickMenuSide\n            list={ list }\n            onClick={ onClick }\n            onClose={ onClose }\n            onEditClick={ onEditClick }\n            onRemove={ removeAll }\n        />\n    )\n};\n\nconst mapStateToProps = state => ({\n    tasks: state.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveList(id) {\n        dispatch(\n            removeList(id)\n        )\n\n        dispatch(\n            setList('0', 'My Day')\n        )\n    },\n\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightClickMenuSideContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider, List } from '@material-ui/core';\n\nconst TitleList = ({renderLists}) => (\n    <List className=\"list-titles\" style={{height: '82vh', overflow: 'auto', paddingBottom: 60}}>\n        { renderLists.defaults() }\n\n        <Divider style={{margin: 10}} />\n\n        { renderLists.customs() }\n    </List>\n);\n\nTitleList.propTypes = {\n    renderLists: PropTypes.object.isRequired\n};\n \nexport default TitleList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport RightClickMenuSide from './RightClickMenuSideContainer';\nimport TitleRow from './TitleRowContainer';\nimport TitleList from './TitleList';\n\nconst TitleListContainer = ({lists, onClick=f=>f, onClose=f=>f, onEditClick=f=>f}) => {\n    const defaultLists = lists.filter(list => list.defaultList)\n    const customLists = lists.filter(list => !list.defaultList)\n\n    const defaults = () =>\n        defaultLists.map((list, index) => (\n            <TitleRow\n                key={list.name + '_' + list.id}\n                list={ list }\n                index={ index }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n        ))\n\n    const customs = () =>\n        customLists.map(list => (\n            <RightClickMenuSide\n                key={list.name + '_' + list.id}\n                list={ list }\n                onClick={ onClick }\n                onEditClick={ onEditClick }\n                onClose={ onClose }\n            />\n        ))\n    \n    const renderLists = {\n        defaults,\n        customs\n    }\n\n    return <TitleList renderLists={renderLists} />;\n};\n\nTitleListContainer.propTypes = {\n    lists: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(TitleListContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaPlus } from 'react-icons/fa';\nimport { ListItemText } from '@material-ui/core';\n\nconst AddList = ({onClick=f=>f}) => (\n    <div className=\"add-list\" onClick={ onClick }>\n        <FaPlus className=\"list-icon list-icon-margin-rt\" />\n\n        <ListItemText primary=\"New List\" />\n    </div>\n);\n\nAddList.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default AddList;","import React from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addList } from '../../../actions/listsActions';\nimport { setList } from '../../../actions/currentActions';\nimport AddList from './AddList';\n\nconst AddListContainer = ({lists, onAddList=f=>f, onEditClick=f=>f, onClose=f=>f})  => {\n    const namesOnList = lists.map(list => list.name);\n\n    const setListName = () => {\n        let subName = \"Untitled List\";\n        let num = 1;\n\n        while (namesOnList.includes(subName)) {\n            subName = `Untitled List ${num}`;\n            num++;\n        }\n\n        return subName;\n    }\n\n    const handleClick = () => {\n        const newList = {\n            id: uuid.v4(),\n            name: setListName(),\n            orderBy: 'date_created',\n            orderDir: 'asc',\n            sorted: false,\n            hideCompleted: false,\n            color: [80,40,250],\n            defaultList: false\n        }\n\n        onAddList(newList);\n        onEditClick();\n        onClose();\n    }\n\n    return <AddList onClick={ handleClick } />;\n};\n\nAddListContainer.propTypes = {\n    lists: PropTypes.array.isRequired,\n    onAddList: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddList({id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList}) {\n        dispatch(\n            addList(id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList)\n        )\n\n        dispatch(\n            setList(id, name)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddListContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Search from './Search/Search';\nimport TitleList from './Lists/TitleListContainer';\nimport AddList from '../../components/Side/AddList/AddListContainer';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: '#eee'\n    },\n}));\n\nconst Sidebar = React.forwardRef(({query, onChange=f=>f, onClear=f=>f, onClose=f=>f, onEditClick=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <nav className={classes.drawer} aria-label=\"Todo Lists\">\n            <Hidden xsDown implementation=\"css\">\n                <Drawer open variant=\"permanent\" classes={{paper: classes.drawerPaper}}>\n                    <Search ref={ ref } query={ query } onChange={ onChange } onClear={ onClear } />\n\n                    <TitleList onClick={ onClear } onClose={ onClose } onEditClick={ onEditClick } />\n\n                    <AddList onEditClick={ onEditClick } onClose={ onClose } />\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n});\n\nSidebar.propTypes = {\n    query: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func\n};\n\nexport default Sidebar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeQuery, clearQuery } from '../../actions/queryActions';\nimport Sidebar from './Sidebar';\n\nconst SidebarContainer = ({query, onChangeQuery=f=>f, onClear=f=>f, onClose=f=>f, onEditClick=f=>f}) => {\n    let _searchInput;\n\n    const handleChange = e => {\n        onChangeQuery(e.target.value);\n        onClose();\n    }\n\n    const clearSearch = () => {\n        _searchInput.value = '';\n        onClear();\n    }\n\n    return (\n        <Sidebar\n            ref={ input => _searchInput = input }\n            query={ query }\n            onChange={ handleChange }\n            onClear={ clearSearch }\n            onClose={ onClose }\n            onEditClick={ onEditClick }\n        />\n    )\n};\n\nSidebarContainer.propTypes = {\n    query: PropTypes.string,\n    onChangeQuery: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    query: state.query\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeQuery(query) {\n        dispatch(\n            changeQuery(query)\n        )\n    },\n\n    onClear() {\n        dispatch(\n            clearQuery()\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef: true})(SidebarContainer);","import C from './constants';\n\nexport const changeQuery = query => ({\n    type: C.CHANGE_QUERY,\n    payload: query\n})\n\nexport const clearQuery = () => ({\n    type: C.CLEAR_QUERY\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleCompleted } from '../../../../../../actions/tasksActions'; \nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\n\nconst Completed = ({task, onToggleComplete=f=>f}) => {\n    const completed =\n        <FaCheckCircle \n            className=\"list-icon green list-icon-margin-rt\" \n            onClick={() => onToggleComplete(task.task_id)}\n        />\n        \n    const notCompleted =\n        <FaRegCircle \n            className=\"list-icon list-icon-margin-rt gray\" \n            onClick={() => onToggleComplete(task.task_id)}\n        />\n        \n    return task.completedStatus ? completed : notCompleted;\n};\n\nCompleted.propTypes = {\n    task: PropTypes.object.isRequired,\n    onToggleComplete: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Completed);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleImportant } from '../../../../../../actions/tasksActions'; \nimport { FaStar, FaRegStar } from 'react-icons/fa';\n\nconst Important = ({task, onToggleImportant=f=>f}) => {\n    const important =\n        <FaStar \n            className=\"list-icon blue\" \n            onClick={() => onToggleImportant(task.task_id)}\n        />\n    \n    const notImportant =\n        <FaRegStar \n            className=\"list-icon gray\"\n            onClick={() => onToggleImportant(task.task_id)}\n        />\n\n    return task.importantStatus ? important : notImportant;\n};\n\nImportant.propTypes = {\n    task: PropTypes.object.isRequired,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Important);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Icon } from '@material-ui/core';\n\nconst Detail = ({el, name, task}) => {\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    const statusColor = () => {\n        if (el.id === 'my_day' || (el.id === 'planned' && task.date_due === todaysDate)) {\n            return 'royalblue';\n        } else if (el.id === 'planned' && task.date_due < todaysDate) {\n            return 'crimson';\n        } else {\n            return null;\n        }\n    };\n\n    return (\n        (el.id === \"my_day\" && task.my_day === true && name !== \"My Day\") ||\n        (el.id === \"custom\" && task.tasks === false && name !== el.text) ||\n        (el.id === \"tasks\" && task.tasks === true && name !== \"Tasks\") ||\n        (el.id === \"step\" && task.steps.length > 0) ||\n        (el.id === \"planned\" && task.date_due) ||\n        (el.id === \"note\" && task.note)\n        ) ?\n            <li className=\"list-detail\" style={{ color: statusColor() }}>\n                {el.icon ? <Icon style={{fontSize: 'small', marginRight: 3, paddingTop: 1}}>{el.icon}</Icon> : null}\n                {el.text}\n            </li>\n            : null\n};\n\nDetail.propTypes = {\n    el: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    task: PropTypes.object.isRequired\n};\n\nexport default Detail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaCheck } from 'react-icons/fa';\nimport moment from 'moment';\nimport Detail from './Detail';\n\nconst Details = ({lists, selectedListId, task}) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n\n    const listItemDetail = () => {\n        return {\n            display: 'flex',\n            fontSize: '.8rem',\n            color: task.completedStatus ? 'darkgray' : 'dimgray'\n        }\n    }\n\n    const getListName = () => {\n        const arr = lists.filter(list => list.id === task.list_id);\n        return arr[0].name;\n    }\n\n    const completedTask = () => {\n        return numOfCompletedSteps() === task.steps.length ? <FaCheck style={{fontSize: '.7rem'}} /> : null\n    }\n\n    const numOfCompletedSteps = () => {\n        let count = 0;\n        task.steps.forEach(step => step.completedStatus === true ? count++ : count)\n\n        return count;\n    }\n\n    const getFormattedDate = () => {\n        let formattedDate;\n        if (task.date_due === moment(new Date()).format('YYYY-MM-DD')) {\n            formattedDate = 'Today';\n        } else if (task.date_due === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (task.date_due === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(task.date_due).format('ddd, MMM D')\n        }\n        return formattedDate;\n    }\n    \n    const getPlannedDate = () => {\n        return !task.date_due ? null : getFormattedDate()\n    }\n\n    const details = [\n        {\n            \"id\": \"my_day\",\n            \"icon\": \"wb_sunny\",\n            \"text\": \"My Day\"\n        },\n        {\n            \"id\": \"tasks\",\n            \"text\": \"Tasks\"\n        },\n        {\n            \"id\": \"custom\",\n            \"text\": getListName()\n        },\n        {\n            \"id\": \"step\",\n            \"icon\": task.steps.length > 0 && completedTask() ? \"check\" : null,\n            \"text\": task.steps.length > 0 ? `${numOfCompletedSteps()} of ${task.steps.length}` : null\n        },\n        {\n            \"id\": \"planned\",\n            \"icon\": \"calendar_today\",\n            \"text\": getPlannedDate()\n        },\n        {\n            \"id\": \"note\",\n            \"icon\": \"bookmark_border\",\n            \"text\": \"Note\"\n        }\n    ];\n\n    const renderDetails = (arr) => {\n        const name = selectedList[0].name;\n\n        return arr.map(detail =>\n            <Detail key={detail.id} el= {detail} name={name} task={task} />\n        )\n    }\n\n    return (\n        <ul style={ listItemDetail() }>\n            { renderDetails(details) }\n        </ul>\n    );\n};\n\nDetails.propTypes = {\n    lists: PropTypes.array.isRequired,\n    selectedListId: PropTypes.string.isRequired, \n    task: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n \nexport default connect(mapStateToProps)(Details);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Details from './Details/Details';\n\nconst Item = ({task}) => {\n    const listItem = () => {\n        return {\n            color: task.completedStatus ? 'dimgray' : 'black',\n            textDecoration: task.completedStatus ? 'line-through' : 'none'\n        }\n    };\n    \n    return (\n        <span style={ listItem() }>\n            { task.item }\n\n            <Details task={ task } />\n        </span>\n    );\n};\n\nItem.propTypes = {\n    task: PropTypes.object.isRequired\n};\n \nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Completed from './Status/Completed';\nimport Important from './Status/Important';\nimport Item from './Item';\n\nconst Task = ({selectedTaskId, task, onClick=f=>f}) => {\n    const listStyle = id => {\n        return {\n            borderRadius: id === selectedTaskId ? 10 : null,\n            backgroundColor: id === selectedTaskId ? '#eee' : null\n        }\n    };\n\n    return ( \n        <div className=\"list-item align-center space-between\" style={ listStyle(task.task_id) } onClick={ onClick }>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n                <Completed task={task} />\n\n                <Item task={task} />\n            </div>\n\n            <Important task={task} />\n        </div>\n    );\n};\n\nTask.propTypes = {\n    selectedTaskId: PropTypes.string,\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default Task;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTask } from '../../../../../actions/currentActions';\nimport Task from './Task';\n\nconst TaskContainer = ({selectedTaskId, task, onClick=f=>f, onSetTask=f=>f}) => {\n    const handleClick = () => {\n        onSetTask(task.task_id, task.item, task.note, task.steps);\n        onClick();\n    }\n\n    return ( \n        <Task \n            task={ task }\n            selectedTaskId={ selectedTaskId }\n            onClick={ handleClick }\n        />\n    );\n};\n\nTaskContainer.propTypes = {\n    selectedTaskId: PropTypes.string,\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSetTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    selectedTaskId: state.current.task[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MenuItem } from 'react-contextmenu';\nimport { FaRegSun } from 'react-icons/fa';\nimport { toggleMyDay } from '../../../../../../actions/tasksActions'; \n\nconst MarkMyDay = ({task, onToggleMyDay=f=>f}) => {\n    const removeMyDay =\n        <div onClick={() => onToggleMyDay(task.task_id)}>\n            <FaRegSun className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Remove from My Day</span>\n        </div>\n\n    const addMyDay =\n        <div onClick={() => onToggleMyDay(task.task_id)}>\n            <FaRegSun className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Add to My Day</span>\n        </div>\n\n    return (\n        <MenuItem>\n            { task.my_day ? removeMyDay : addMyDay }\n        </MenuItem>\n    );\n};\n\nMarkMyDay.propTypes =  {\n    task: PropTypes.object.isRequired,\n    onToggleMyDay: PropTypes.func.isRequired\n};\n \nconst mapDispatchToProps = dispatch => ({\n    onToggleMyDay(id) {\n        dispatch(\n            toggleMyDay(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MarkMyDay);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MenuItem } from 'react-contextmenu';\nimport { FaCheckCircle, FaRegCheckCircle } from 'react-icons/fa';\nimport { toggleCompleted } from '../../../../../../actions/tasksActions'; \n\nconst MarkCompleted = ({task, onToggleComplete=f=>f}) => {\n    const markNotCompleted =\n        <div onClick={() => onToggleComplete(task.task_id)}>\n            <FaRegCheckCircle className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Mark as not completed</span>\n        </div>\n\n    const markCompleted =\n        <div onClick={() => onToggleComplete(task.task_id)}>\n            <FaCheckCircle className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Mark as completed</span>\n        </div>\n        \n    return (\n        <MenuItem>\n            { task.completedStatus ? markNotCompleted : markCompleted }\n        </MenuItem>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    }\n});\n\nMarkCompleted.propTypes = {\n    task: PropTypes.object.isRequired,\n    onToggleComplete: PropTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(MarkCompleted);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MenuItem } from 'react-contextmenu';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\nimport { toggleImportant } from '../../../../../../actions/tasksActions'; \n\nconst MarkImportant = ({task, onToggleImportant=f=>f}) => {\n    const removeImportance =\n        <div onClick={() => onToggleImportant(task.task_id)}>\n            <FaRegStar className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Remove importance</span>\n        </div>\n    \n    const markImportant =\n        <div onClick={() => onToggleImportant(task.task_id)}>\n            <FaStar className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Mark as important</span>\n        </div>\n\n    return (\n        <MenuItem>\n            { task.importantStatus ? removeImportance : markImportant }\n        </MenuItem>\n    );\n};\n\nMarkImportant.propTypes ={\n    task: PropTypes.object.isRequired,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MarkImportant);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeTask } from '../../../../../../actions/tasksActions'; \nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport TaskContainer from '../TaskContainer';\nimport DeleteModal from '../../../../../common/DeleteModal';\nimport MarkMyDay from '../MenuItem/MarkMyDay';\nimport MarkCompleted from '../MenuItem/MarkCompleted';\nimport MarkImportant from '../MenuItem/MarkImportant';\n\nconst RightClickMenu = ({task, onClick=f=>f, onClose=f=>f, onRemoveTask=f=>f}) => {\n    const handleRemove = () => {\n        onRemoveTask(task.task_id);\n        onClose();\n    }\n\n    return (\n        <div>\n            <ContextMenuTrigger id={`menuitem_${task.task_id}`}>\n                <TaskContainer task={ task } onClick={ onClick } />\n            </ContextMenuTrigger>\n\n            <ContextMenu id={`menuitem_${task.task_id}`}>\n                <MarkMyDay task={task} />\n\n                <MarkCompleted task={task} />\n                \n                <MarkImportant task={task} />\n                \n                <MenuItem divider />\n\n                <MenuItem>\n                    <DeleteModal \n                        id={ task.task_id }\n                        location={ 'main-rightclick' }\n                        name={ task.item }\n                        todo={ 'task' }\n                        onClick={ handleRemove }\n                    />\n                </MenuItem>\n            </ContextMenu>\n        </div>\n    )\n};\n\nRightClickMenu.propTypes = {\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(RightClickMenu);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RightClickMenu from './RightClickMenu/RightClickMenu';\n\nconst Tasks = ({tasks, onClick=f=>f, onClose=f=>f}) => {\n    const renderTasks = () =>\n        tasks.map(task =>\n            <RightClickMenu\n                key={ task.task_id }\n                task={ task }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n    )\n    return renderTasks();\n};\n\nTasks.propTypes = {\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n \nexport default Tasks;\n","import React from 'react';\nimport '../../stylesheets/common.css';\nimport PropTypes from 'prop-types';\nimport { FaRegCircle, FaPlus } from 'react-icons/fa';\n\nconst AddButton = ({addItem, item}) => {\n    const add =\n        <FaPlus \n            style={{fontSize: addItem === 'task' ? '1.2rem' : '1rem'}} \n            className=\"blue\" \n        />\n\n    const status = \n        <FaRegCircle \n            style={{fontSize: addItem === 'task' ? '1.2rem' : '1rem'}} \n            className=\"gray\" \n        /> \n\n    return (\n        <button className=\"add-btn\" type=\"submit\">\n            { !item ?  add : status }\n        </button>\n    );\n};\n\nAddButton.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    item: PropTypes.string.isRequired\n};\n \nexport default AddButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddButton from './AddButton';\n\nconst AddItem = React.forwardRef(({addItem, item, placeholder, itemStyle=f=>f, onChange=f=>f, onSubmit=f=>f}, ref) => (\n    <form className=\"add-form align-center\" style={ itemStyle() } onSubmit={ onSubmit }>\n        <AddButton addItem={addItem} item={item} />\n        \n        <input\n            ref={ref}\n            style={{flex: '10', padding: 5, border: 'none'}}\n            type=\"text\"\n            name=\"item\"\n            placeholder={ placeholder }\n            value={ item }\n            onChange={ e => onChange(e.target.value) }\n        />\n    </form>\n));\n\nAddItem.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    item: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    itemStyle: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default AddItem;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { addStep, addTask } from '../../actions/tasksActions';\nimport AddItem from './AddItem';\n\nconst AddItemContainer = ({addItem, lists, placeholder, selectedListId, selectedTaskId, onAddStep=f=>f, onAddTask=f=>f}) => {\n    const [item, setItem] = useState('');\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    let _newItem;\n\n    const itemStyle = () => {\n        if (addItem === 'task') {\n            return {\n                margin: '0 auto',\n                height: 60,\n                padding: '10px 14px',\n                borderBottom: '1px solid gainsboro'\n            }\n        } else {\n            return {\n                margin: '3px 0 10px 0',\n                height: 30,\n                padding: '10px 12px',\n                borderBottom: 'none'\n            }\n        }\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (!item) return\n\n        const newStep = {\n            completedStatus: false,\n            id: uuid.v4(),\n            step: item,\n            task_id: selectedTaskId\n        }\n\n        if (addItem === 'step') {\n            onAddStep(newStep);\n        }\n\n        else {\n            if (name === \"My Day\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: true,\n                    planned: false,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Important\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: true,\n                    my_day: false,\n                    planned: false,\n                    important: true,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Planned\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: todaysDate,\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: true,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Tasks\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: false,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: false,\n                    important: false,\n                    tasks: false,\n                    list_id: selectedList[0].id,\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            }\n        }\n\n        setItem('');\n    };\n\n    const handleChange = () => {\n        setItem(_newItem.value)\n    };\n\n    \n    return (\n        <AddItem\n            ref={input => _newItem = input}\n            addItem={addItem}\n            item={item}\n            placeholder={placeholder}\n            itemStyle={itemStyle}\n            onChange={handleChange}\n            onSubmit={onSubmit}\n        />\n    );\n};\n\nAddItemContainer.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    placeholder: PropTypes.any,\n    selectedListId: PropTypes.string.isRequired,\n    selectedTaskId: PropTypes.string.isRequired,\n    onAddStep: PropTypes.func.isRequired,\n    onAddTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"],\n    selectedTaskId: state.current.task[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddTask({\n            task_id, item, date_completed, date_created, date_due, temp,\n            completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n        }) {\n        dispatch(\n            addTask(\n                task_id, item, date_completed, date_created, date_due, temp,\n                completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n            )\n        )\n    },\n\n    onAddStep({completedStatus, id, step, task_id}) {\n        dispatch(\n            addStep(completedStatus, id, step, task_id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Tasks from './Task/Tasks';\nimport AddItem from '../../../common/AddItemContainer';\n\nconst Body = ({ query, tasks, onClick = f => f, onClose = f => f }) => (\n    <div className=\"main-container\">\n        <Tasks tasks={tasks} onClick={onClick} onClose={onClose} />\n\n        {query ? null : <AddItem addItem={'task'} placeholder={'Add Task'} />}\n    </div>\n);\n\nBody.propTypes = {\n    query: PropTypes.string,\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    query: state.query\n});\n\nexport default connect(mapStateToProps)(Body);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\nimport { toggleCompleted } from '../../../../actions/tasksActions';\n\nconst Completed = ({selectedTask, onToggleComplete=f=>f}) => {\n    const completed =\n        <FaCheckCircle \n            className=\"list-icon list-icon-margin-rt green\" \n            onClick={() => onToggleComplete(selectedTask[0].task_id)}\n        />\n\n    const notCompleted =\n        <FaRegCircle \n            className=\"list-icon list-icon-margin-rt gray\" \n            onClick={() => onToggleComplete(selectedTask[0].task_id)}\n        />\n\n    return selectedTask[0].completedStatus ? completed : notCompleted;\n};\n\nCompleted.propTypes = {\n    selectedTask: PropTypes.array,\n    onToggleComplete: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Completed);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleImportant } from '../../../../actions/tasksActions';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\n\nconst Important = ({selectedTask, onToggleImportant=f=>f}) => {\n    const important =\n        <FaStar \n            className=\"list-icon blue\" \n            onClick={() => onToggleImportant(selectedTask[0].task_id)}\n        />\n    \n    const notImportant =\n        <FaRegStar \n            className=\"list-icon gray\" \n            onClick={() => onToggleImportant(selectedTask[0].task_id)}\n        />\n\n    return selectedTask[0].importantStatus ? important : notImportant;\n};\n\nImportant.propTypes = {\n    selectedTask: PropTypes.array,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n \nexport default connect(null, mapDispatchToProps)(Important);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport Completed from './Status/Completed';\nimport Important from './Status/Important';\n\nconst HeaderSection = ({currentTask, selectedTask, onEnterPress=f=>f, onSetTask=f=>f, onSubmit=f=>f}) => (\n    <div className=\"more-margins more-header\">\n        <div style={{display: 'flex'}}>\n            <Completed selectedTask={selectedTask} />\n\n            <form onSubmit={onSubmit}>\n                <Textarea\n                    type=\"text\"\n                    className=\"more-list-title\"\n                    value={ currentTask.task }\n                    onChange={e => onSetTask(currentTask.id, e.target.value, selectedTask[0].note, selectedTask[0].steps)}\n                    onKeyDown={e => onEnterPress(e)}\n                />\n            </form>\n        </div>\n\n        <Important selectedTask={selectedTask} />\n    </div>\n);\n\nHeaderSection.propTypes = {\n    currentTask: PropTypes.object.isRequired,\n    selectedTask: PropTypes.array.isRequired,\n    onEnterPress: PropTypes.func.isRequired,\n    onSetTask: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default HeaderSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTask } from '../../../actions/currentActions'; \nimport { updateTask } from '../../../actions/tasksActions';\nimport HeaderSection from './HeaderSection';\n\nconst HeaderSectionContainer = ({currentTask, selectedTask, onSetTask=f=>f, onUpdateTask=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (currentTask.task === '') {\n            let subTask = selectedTask[0].item;\n            onUpdateTask(currentTask.id, subTask, selectedTask[0].note, selectedTask[0].steps);\n        } else {\n            onUpdateTask(currentTask.id, currentTask.task, selectedTask[0].note, selectedTask[0].steps);\n        }\n    }\n\n    const onEnterPress = e => {\n        if (e.which === 13 && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n        }\n    }\n\n    return (\n        <HeaderSection\n            currentTask={ currentTask }\n            selectedTask={ selectedTask }\n            onEnterPress={ onEnterPress }\n            onSetTask={ onSetTask }\n            onSubmit={ onSubmit }\n        />\n    );\n};\n\nHeaderSectionContainer.propTypes = {\n    currentTask: PropTypes.object,\n    selectedTask: PropTypes.array,\n    onSetTask: PropTypes.func.isRequired,\n    onUpdateTask: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSetTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n    },\n\n    onUpdateTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n\n        dispatch(\n            updateTask(id, task)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(HeaderSectionContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\n\nconst Completed = ({selectedTask, step, onToggleStep=f=>f}) => {\n    const completed =\n        <FaCheckCircle \n            className=\"step-margin-rt green\" \n            style={{fontSize: '1rem'}} \n            onClick={() => onToggleStep(selectedTask[0].task_id, step.id)}\n        />\n    \n    const notCompleted =\n        <FaRegCircle \n            className=\"step-margin-rt gray\" \n            style={{fontSize: '1rem'}} \n            onClick={() => onToggleStep(selectedTask[0].task_id, step.id)}\n        />\n\n    return step.completedStatus ? completed : notCompleted;\n};\n\nCompleted.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    step: PropTypes.object,\n    onToggleStep: PropTypes.func.isRequired\n};\n \nexport default Completed;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport Textarea from 'react-textarea-autosize';\nimport DeleteModal from '../../../common/DeleteModal';\nimport Completed from './Completed';\n\nconst Step = ({selectedTask, step, stepContainer=f=>f, stepStyle=f=>f, getPlaceholder=f=>f, onEnterPress=f=>f, onRemoveStep=f=>f, onSetStep=f=>f, onToggleStep=f=>f}) => (\n    <ListItem key={`${step.step}_${step.id}`} style={ stepContainer(step.id) } onClick={() => onSetStep(step.id, step.step)}>\n        <div className=\"align-center\">\n            <Completed selectedTask={selectedTask} step={step} onToggleStep={onToggleStep} />\n            \n            <Textarea\n                style={ stepStyle(step) }\n                type=\"text\"\n                value={getPlaceholder(step)}\n                onChange={e => onSetStep(step.id, e.target.value)}\n                onKeyPress={e => onEnterPress(e)}\n            />\n        </div>\n\n        <DeleteModal \n            id={ step.id }\n            location={ 'more-top' }\n            name={ step.step }\n            todo={ 'step' }\n            onClick={() => onRemoveStep(selectedTask[0].task_id, step.id)}\n        />\n    </ListItem>\n);\n\nStep.propTypes = {\n    selectedTask: PropTypes.array,\n    step: PropTypes.object.isRequired,\n    getPlaceholder: PropTypes.func.isRequired,\n    onEnterPress: PropTypes.func.isRequired,\n    onRemoveStep: PropTypes.func.isRequired,\n    onSetStep: PropTypes.func.isRequired,\n    stepContainer: PropTypes.func.isRequired,\n    stepStyle: PropTypes.func.isRequired\n};\n\nexport default Step;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setStep } from '../../../../actions/currentActions'; \nimport { removeStep, toggleStep, updateStep } from '../../../../actions/tasksActions';\nimport Step from './Step';\n\nconst StepContainer = ({currentStep, currentSteps, selectedTask, step, onRemoveStep=f=>f, onSetStep=f=>f, onToggleStep=f=>f, onUpdateStep=f=>f}) => {\n    const stepContainer = id => {\n        return {\n            padding: '8px 16px',\n            backgroundColor: currentStep.id === id ? '#eee' : null\n        }\n    }\n\n    const stepStyle = step => {\n        return {\n            color: step.completedStatus ? 'dimgray' : 'black',\n            textDecoration: step.completedStatus ? 'line-through' : 'none'\n        }\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (currentStep.step === '') {\n            let subStep = currentStep[0].step;\n            onUpdateStep(currentStep.id, subStep, selectedTask[0].task_id)\n        } else {\n            onUpdateStep(currentStep.id, currentStep.step, selectedTask[0].task_id);\n        }\n    }\n\n    const onEnterPress = e => {\n        if (e.which === 13 && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n        }\n    }\n\n    const getPlaceholder = (step) => {\n        const el = currentSteps.filter(selected => selected.id === step.id)\n\n        if (!el[0]) return\n        return el[0].step\n    }\n\n    \n    return (\n        <Step\n            step={ step }\n            selectedTask={ selectedTask }\n            getPlaceholder={ getPlaceholder }\n            onEnterPress={ onEnterPress }\n            onRemoveStep={ onRemoveStep }\n            onSetStep={ onSetStep }\n            onToggleStep={ onToggleStep }\n            stepContainer={ stepContainer }\n            stepStyle={ stepStyle }\n        />\n    );\n};\n\nStepContainer.propTypes = {\n    currentStep: PropTypes.object,\n    currentSteps: PropTypes.array,\n    selectedTask: PropTypes.array,\n    step: PropTypes.object,\n    onRemoveStep: PropTypes.func.isRequired,\n    onSetStep: PropTypes.func.isRequired,\n    onToggleStep: PropTypes.func.isRequired,\n    onUpdateStep: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentStep: state.current.step,\n    currentSteps: state.current.taskSteps,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveStep(taskId, stepId) {\n        dispatch(\n            removeStep(taskId, stepId)\n        )\n    },\n\n    onSetStep(id, step) {\n        dispatch(\n            setStep(id, step)\n        )\n    },\n\n    onToggleStep(taskId, stepId) {\n        dispatch(\n            toggleStep(taskId, stepId)\n        )\n    },\n\n    onUpdateStep(id, step, taskId) {\n        dispatch(\n            setStep(id, step, taskId)\n        )\n    \n        dispatch(\n            updateStep(id, step, taskId)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\nimport Step from './StepContainer';\n\nconst Steps = ({selectedTask}) => {\n    if (!selectedTask[0]) return null;\n    \n    const renderSteps = () => {\n        if (selectedTask[0].steps.length === 0) return null;\n        \n        return selectedTask[0].steps.map(step =>\n            <Step key={`step_${step.id}`} step={ step } selectedTask={ selectedTask } />\n        )\n    }\n\n    return (\n        <List>\n            { renderSteps() }\n        </List>\n    )\n};\n\nSteps.propTypes = {\n    selectedTask: PropTypes.array.isRequired\n};\n \nexport default Steps;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Steps from './Steps';\nimport AddItem from '../../../common/AddItemContainer';\n\nconst StepsContainer = ({selectedTask}) => {\n    if (!selectedTask[0]) return null;\n    \n    return (\n        <React.Fragment>\n            <Steps selectedTask={selectedTask} />\n\n            <AddItem addItem={'step'} placeholder={selectedTask[0].steps.length > 0 ? 'Next Step' : 'Add step'} />\n        </React.Fragment>\n        \n    );\n};\n\nStepsContainer.propTypes = {\n    selectedTask: PropTypes.array.isRequired\n};\n \nexport default StepsContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaRegSun, FaTimes } from 'react-icons/fa';\nimport { ListItem } from '@material-ui/core';\n\nconst MoreMyDay = ({selectedTask, onClick=f=>f}) => {\n    const removeMyDay = \n        <div className=\"align-center space-between\">\n            <div className=\"align-center blue\">\n                <FaRegSun className=\"list-icon list-icon-left\"/>\n                Added to My Day \n            </div>\n            \n            <FaTimes style={{color: 'dimgray'}}/>\n        </div>\n\n    const addMyDay =\n        <div className=\"align-center\" style={{color: 'dimgray'}}>\n            <FaRegSun className=\"list-icon list-icon-left\" />\n            <span>Add to My Day</span>\n        </div>\n\n    return (\n        <ListItem style={{margin: '10px 0px'}} onClick={ onClick }>\n            { selectedTask[0].my_day ? removeMyDay : addMyDay }\n        </ListItem>\n    );\n};\n\nMoreMyDay.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n \nexport default MoreMyDay;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleMyDay } from '../../../../actions/tasksActions';\nimport MoreMyDay from './MoreMyDay';\n\nconst MoreMyDayContainer = ({currentList, selectedTask, onClose=f=>f, onToggleMyDay=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    const handleClick = () => {\n        if (currentList === \"My Day\"){\n            onClose();\n        }\n        onToggleMyDay(selectedTask[0].task_id);\n    }\n\n    return <MoreMyDay selectedTask={selectedTask} onClick={handleClick} />;\n};\n\nMoreMyDayContainer.propTypes = {\n    currentList: PropTypes.string.isRequired,\n    selectedTask: PropTypes.array,\n    onClose: PropTypes.func.isRequired,\n    onToggleMyDay: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentList: state.current.list[\"title\"],\n});\n\nconst mapDispatchToProps = dispatch => ({\n    \n    onToggleMyDay(id) {\n        dispatch(\n            toggleMyDay(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreMyDayContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FaRegCalendar, FaTimes } from 'react-icons/fa';\n\nconst PlannedButton = ({selectedTask, onClick=f=>f, onRemoveDateDue=f=>f}) => {\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    const getDateDue = () => {\n        if (!selectedTask[0].date_due) return\n\n        let formattedDate;\n        if (selectedTask[0].date_due === todaysDate) {\n            formattedDate = 'Today';\n        } else if (selectedTask[0].date_due === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (selectedTask[0].date_due === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(selectedTask[0].date_due).format('ddd, MMM D')\n        }\n        return formattedDate;\n    }\n\n    const add = \n        <div className=\"align-center\" style={{color: 'dimgray'}} onClick={ onClick }>\n            <FaRegCalendar className=\"list-icon list-icon-margin-rt\" />\n            <span>Add Due Date</span>\n        </div>\n        \n    const show =\n        <div className=\"align-center space-between\">\n            <div className=\"align-center\" style={{color: selectedTask[0].date_due < todaysDate ? 'crimson' : 'royalblue'}} onClick={ onClick }>\n                <FaRegCalendar className=\"list-icon list-icon-margin-rt\" />\n                <span>Due {getDateDue()}</span>\n            </div>\n\n            <FaTimes style={{color: 'dimgray'}} onClick={() => onRemoveDateDue(selectedTask[0].task_id)} />\n        </div>\n\n    return !selectedTask[0].date_due ? add : show\n};\n\nPlannedButton.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemoveDateDue: PropTypes.func.isRequired\n};\n \nexport default PlannedButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeDateDue } from '../../../../actions/tasksActions';\nimport PlannedButton from './PlannedButton';\n\nconst PlannedButtonContainer = ({selectedTask, onClick=f=>f, onRemoveDateDue=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    return (\n        <PlannedButton \n            selectedTask={ selectedTask }\n            onClick={ onClick }\n            onRemoveDateDue={ onRemoveDateDue }\n        />\n    )\n};\n\nPlannedButtonContainer.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemoveDateDue: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveDateDue(id) {\n        dispatch(\n            removeDateDue(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(PlannedButtonContainer);","import 'date-fns';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\nimport moment from 'moment';\n\nconst MaterialUIPickers = ({selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f}) => {\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        \n        const arr = tasks.filter(task => task.task_id === selectedTask[0].task_id);\n        const taskId = arr[0].task_id;\n        const newDate = moment(date).format('YYYY-MM-DD');\n\n        onAddDateDue(taskId, newDate);\n        onClose();\n    }\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Pick a Date\"\n                format=\"MM/dd/yyyy\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n        </MuiPickersUtilsProvider>\n    );\n};\n\nMaterialUIPickers.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired,\n    onAddDateDue: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default MaterialUIPickers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu } from '@material-ui/core';\n\nconst MenuTemplate = ({anchorEl, menuArr, open, onClose=f=>f, renderMenuItems=f=>f}) => (\n    <Menu\n        open={ open }\n        onClose={ onClose }\n        anchorEl={ anchorEl }>\n\n        { renderMenuItems(menuArr) }\n    </Menu>\n);\n\nMenuTemplate.propTypes = {\n    open: PropTypes.bool.isRequired,\n    anchorElement: PropTypes.any,\n    onClose: PropTypes.func.isRequired,\n    menuArr: PropTypes.array.isRequired,\n    renderMenuItems: PropTypes.func.isRequired\n};\n\nexport default MenuTemplate;","import moment from 'moment';\n\nconst getDay = (num) => {\n    return moment(new Date()).add(num, 'days').format('ddd')\n}\n\nconst plannedMenu = [\n    {\n        \"id\": \"today\",\n        \"icon\": \"today\",\n        \"caption\": \"Today\",\n        \"size\": \".8rem\",\n        \"num\": 0,\n        \"day\": getDay(0)\n    },\n    {\n        \"id\": \"tomorrow\",\n        \"icon\": \"event\",\n        \"caption\": \"Tomorrow\",\n        \"size\": \".8rem\",\n        \"num\": 1,\n        \"day\": getDay(1)\n    },\n    {\n        \"id\": \"nextWeek\",\n        \"icon\": \"event_note\",\n        \"caption\": \"Next Week\",\n        \"size\": \".8rem\",\n        \"num\": 2,\n        \"day\": getDay(2)\n    },\n    {\n        \"id\":\"pickDate\",\n        \"icon\": \"calendar_today\",\n        \"caption\": \"Pick a Date\",\n        \"children\": \"children\"\n    }\n]\n\nexport default plannedMenu;","import React, { Component } from 'react';\nimport moment from 'moment'\nimport DatePicker from './DatePicker';\nimport { connect } from 'react-redux';\nimport { addDateDue } from '../../../../actions/tasksActions';\nimport { Icon, ListItemText, MenuItem } from '@material-ui/core';\nimport MenuTemplate from '../../../common/MenuTemplate';\nimport dateDueMenu from './DateMenu';\n\nclass PlannedMenuContainer extends Component {\n    state={\n        subAnchorEl: null,\n        subMenuOpen: false,\n        value: null\n    }\n\n    handleSubItemClick = (e, item) => {\n        this.setState({\n            subAnchorEl: e.currentTarget,\n            subMenuOpen: !this.state.subMenuOpen,\n            value: item.id\n        });\n    }\n\n    handleSubMenuClose = () => {\n        this.setState({\n            subMenuOpen: false\n        });\n    }\n    \n    handleSort = (item) => {\n        const { selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f } = this.props;\n        const arr = tasks.filter(task => task.task_id === selectedTask[0].task_id);\n        const taskId = arr[0].task_id;\n        const newDate = moment(new Date()).add(item.num, 'days').format('YYYY-MM-DD');\n\n        onAddDateDue(taskId, newDate);\n        onClose();\n    }\n\n    renderMenuItems = children => {\n        const { selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f } = this.props;\n\n        return children.map(item => {\n            if (item.children) {\n                return (\n                    <MenuItem key={item.id}>\n                        <DatePicker\n                            selectedTask={ selectedTask }\n                            tasks={ tasks }\n                            onAddDateDue={ onAddDateDue }\n                            onClose={ onClose }\n                        />\n                    </MenuItem>\n                )\n            }\n\n            return (\n                <MenuItem key={item.id}\n                    className=\"align-center space-between\"\n                    onClick={() => this.handleSort(item)}>\n                        <Icon className=\"list-icon\" style={{marginRight: '.5rem'}}>\n                            { item.icon }\n                        </Icon>\n                \n                        <ListItemText primary={item.caption} />\n\n                        <span style={{fontSize: item.size}}>\n                            {item.day}\n                        </span>\n                </MenuItem>\n            )\n        });\n    };\n \n    render() {\n        const { anchorEl, open, onClose } = this.props;\n        \n        return <MenuTemplate anchorEl={anchorEl} menuArr={dateDueMenu} open={open} onClose={onClose} renderMenuItems={this.renderMenuItems} />;\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onAddDateDue(id, date) {\n        dispatch(\n            addDateDue(id, date)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(PlannedMenuContainer);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport PlannedButton from './PlannedButtonContainer';\nimport PlannedMenu from './PlannedMenuContainer';\n\nconst Planned = ({selectedTask, tasks}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    if (!selectedTask[0]) return null;\n\n    const handleButtonClick = e => {\n        setAnchorEl(e.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <ListItem style={{margin: '10px 0px'}}>\n            <PlannedButton selectedTask={ selectedTask } onClick={ handleButtonClick } />\n\n            <PlannedMenu\n                open={ Boolean(anchorEl) }\n                onClose={ handleMenuClose }\n                anchorEl={ anchorEl }\n                selectedTask={ selectedTask }\n                tasks={ tasks }\n            />\n        </ListItem>\n    );\n};\n\nPlanned.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired\n};\n\nexport default Planned;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport { ClickAwayListener, ListItem } from '@material-ui/core';\n\nconst Note = ({currentNote, selectedTask, onClick=f=>f, onClickAway=f=>f, onSetNote=f=>f}) => {\n    const placeholder = () => {\n        if (!currentNote) currentNote = \"\";\n        return (\n            <Textarea\n                placeholder={'Add a Note'}\n                value={ currentNote }\n                onChange={e => onSetNote(selectedTask[0].task_id, e.target.value)}\n            />\n        );\n    }\n\n    const note = () => {\n        if (!currentNote) currentNote = \"\";\n        return (\n            <Textarea\n                value={ currentNote }\n                onChange={e => onSetNote(selectedTask[0].task_id, e.target.value)}\n            />\n        )\n    }\n\n    return (\n        <ClickAwayListener onClickAway={onClickAway}>\n            <ListItem style={{margin: '10px 3px'}} onClick={onClick}>\n                { selectedTask[0].note ? note() : placeholder() }\n            </ListItem>\n        </ClickAwayListener>\n    );\n};\n\nNote.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClickAway: PropTypes.func.isRequired\n};\n\nexport default Note;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setNote } from '../../../../actions/currentActions';\nimport { updateNote } from '../../../../actions/tasksActions';\nimport Note from './Note';\n\nconst NoteContainer = ({currentNote, selectedTask, onSetNote=f=>f, onUpdateNote=f=>f}) => {\n    const [open, setOpen] = React.useState(false);\n\n    if (!selectedTask[0]) return null;\n\n    const handleClick = () => {\n        setOpen(prev => !prev);\n    };\n\n    const handleClickAway = () => {\n        if (open) {\n            onUpdateNote(selectedTask[0].task_id, currentNote);\n        }\n        \n        setOpen(false);\n    };\n\n    return (\n        <Note\n            currentNote={ currentNote }\n            selectedTask={ selectedTask }\n            onClick={ handleClick }\n            onClickAway={ handleClickAway }\n            onSetNote={onSetNote}\n        />\n    );\n};\n\nNoteContainer.propTypes = {\n    currentNote: PropTypes.string,\n    selectedTask: PropTypes.array,\n    onSetNote: PropTypes.func.isRequired,\n    onUpdateNote: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentNote: state.current.note,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetNote(id, note) {\n        dispatch(\n            setNote(id, note)\n        )\n    },\n\n    onUpdateNote(id, note) {\n        dispatch(\n            updateNote(id, note)\n        )\n    }\n});\n\nexport default (connect)(mapStateToProps, mapDispatchToProps)(NoteContainer)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider } from '@material-ui/core';\nimport Steps from './Steps/StepsContainer';\nimport MoreMyDay from './MyDay/MoreMyDayContainer';\nimport MorePlanned from './Planned/MorePlanned';\nimport Note from './Note/NoteContainer';\n\nconst BodySection = ({selectedTask, tasks, onClose}) => (\n    <div style={{height: '82vh', overflow: 'auto'}}>\n        <Steps selectedTask={ selectedTask } />\n\n        <Divider />\n\n        <MoreMyDay selectedTask={ selectedTask } onClose={ onClose } />\n\n        <Divider />\n\n        <MorePlanned selectedTask={ selectedTask } tasks={ tasks } />\n\n        <Divider />\n\n        <Note selectedTask={ selectedTask } />\n    </div>\n);\n\nBodySection.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default BodySection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst Completed = ({selectedTask}) => {\n    const getFormattedDate = (inputDate) => {\n        let formattedDate;\n        if (inputDate === moment(new Date()).format('YYYY-MM-DD')) {\n            formattedDate = 'Today';\n        } else if (inputDate === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (inputDate === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(inputDate).format('ddd, MMM D')\n        }\n        \n        return formattedDate;\n    }\n\n    const completed =\n        <span style={{fontSize: '.75rem'}}>\n            Completed {' '} { getFormattedDate(selectedTask[0].date_completed) }\n        </span>\n    \n    const created =\n        <span style={{fontSize: '.75rem'}}>\n            Created {' '} { getFormattedDate(selectedTask[0].date_created) }\n        </span>\n\n    return selectedTask[0].completedStatus ? completed : created;\n};\n\nCompleted.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n};\n \nexport default Completed;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaChevronRight } from 'react-icons/fa';\nimport Completed from './Completed';\nimport DeleteModal from '../../common/DeleteModal';\n\nconst FooterSection = ({selectedTask, onClose=f=>f, onRemove=f=>f}) => (\n    <div className=\"more-fixed more-margins more-footer\">\n        <FaChevronRight onClick={onClose} />\n\n        <Completed selectedTask={selectedTask} />\n\n        <DeleteModal \n            id={ selectedTask[0].task_id }\n            location= { 'more-bottom' }\n            name={ selectedTask[0].item }\n            todo={ 'task' }\n            onClick={() => onRemove(selectedTask[0].task_id)}\n        />\n    </div>\n);\n\nFooterSection.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n};\n \nexport default FooterSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeTask } from '../../../actions/tasksActions';\nimport FooterSection from './FooterSection';\n\nconst FooterSectionContainer = ({selectedTask, onClose=f=>f, onRemoveTask=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    const onRemove = (id) => {\n        onRemoveTask(id);\n        onClose();\n    }\n\n    return (\n        <FooterSection \n            selectedTask={ selectedTask }\n            onClose={ onClose }\n            onRemove={ onRemove }\n        />\n    )\n};\n\nFooterSectionContainer.propTypes = {\n    selectedTask: PropTypes.array,\n    onClose: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(FooterSectionContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Hidden } from '@material-ui/core';\nimport HeaderSection from './Header/HeaderSectionContainer';\nimport BodySection from './Body/BodySection';\nimport FooterSection from './Footer/FooterSectionContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: '#FAFAFA'\n    },\n    drawerHeader: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n}));\n\nconst More = ({currentTask, tasks, open, onClose=f=>f}) => {\n    const classes = useStyles();\n    const selectedTask = tasks.filter(task => task.task_id === currentTask.id);\n\n    return (\n        <Hidden smDown implementation=\"css\">\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"right\"\n                open={ open }\n                classes={{\n                    paper: classes.drawerPaper,\n                }}>\n\n                <div className={classes.drawerHeader}>\n                    <div className={classes.toolbar} />\n\n                    <HeaderSection currentTask={ currentTask } selectedTask={ selectedTask } />\n\n                    <BodySection selectedTask={ selectedTask } tasks={ tasks } onClose={ onClose } />\n\n                    <FooterSection selectedTask={ selectedTask } onClose={ onClose } />\n                </div>\n            </Drawer>\n        </Hidden>\n    )\n};\n\nMore.propTypes = {\n    currentTask: PropTypes.object.isRequired,\n    tasks: PropTypes.array.isRequired, \n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default More;","import MoreInfo from './MoreInfo';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    currentTask: state.current.task,\n    tasks: state.tasks\n});\n\nexport default connect(mapStateToProps)(MoreInfo);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListBody from '../Todolist/Body';\nimport MoreSection from '../../MoreInfo/MoreInfoContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginRight: -drawerWidth,\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n}));\n\nexport const Match = ({filteredTasks, selectedList, open, onOpen=f=>f, onClose=f=>f}) => {\n    const classes = useStyles();\n\n    const mainStyle = () => {\n        return {\n            position: selectedList[0].sorted ? 'relative' : null, \n            top: selectedList[0].sorted ? 30 : null\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <main style={ mainStyle() }\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}>\n\n                <ListBody tasks={ filteredTasks } onClick={ onOpen } onClose={ onClose } />\n            </main>\n\n            <MoreSection open={ open } onClose={ onClose } />\n        </div>\n    )\n};\n\nMatch.propTypes = {\n    filteredTasks: PropTypes.array,\n    selectedList: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport const NoMatch = () =>\n    <div className=\"no-match align-center\">\n        <p>We searched high and low but couldn't find what you're looking for.</p>\n    </div>","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Match, NoMatch } from './Results';\n\nconst ResultsContainer = ({filteredTasks, selectedList, open, onOpen=f=>f, onClose=f=>f}) => (\n    <div style={{flexGrow: 1}}>\n        { filteredTasks.length > 0 ? \n            <Match \n                filteredTasks={filteredTasks}\n                selectedList={selectedList}\n                open={open}\n                onOpen={onOpen}\n                onClose={onClose}\n            />\n            :\n            <NoMatch />\n        }\n    </div>\n);\n\nResultsContainer.propTypes = {\n    filteredTasks: PropTypes.array,\n    selectedList: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n \nexport default ResultsContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = React.forwardRef(({currentList, lists, onSetList=f=>f, onSubmit=f=>f}, ref) => { \n    const selectedList = lists.filter(list => list.id === currentList.id);\n    const defaultList = selectedList[0].defaultList;\n\n    return (\n        <h2 style={{fontWeight: 'bold'}} >\n            { defaultList ?\n                currentList.title\n                :\n                <form onSubmit={ onSubmit }>\n                    <input\n                        ref={ref}\n                        type=\"text\"\n                        className=\"edit-input\"\n                        value={ currentList.title }\n                        onChange={e => onSetList(currentList.id, e.target.value)}\n                    />\n                </form>\n            }\n        </h2>\n    )\n});\n\nTitle.propTypes = {\n    currentList: PropTypes.object.isRequired,\n    lists: PropTypes.array.isRequired,\n    onSetList: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default Title;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { renameList } from '../../../../../actions/listsActions';\nimport { setList } from '../../../../../actions/currentActions';\nimport Name from './Name';\n\nconst NameContainer = React.forwardRef(({currentList, lists, onRenameList=f=>f, onSetList=f=>f}, ref) => { \n    const onSubmit = e => {\n        e.preventDefault();\n\n        const namesOnList = lists.map(list => list.name);\n        const regex=/^\\s+$/;\n\n        if (regex.test(currentList.title) || currentList.title === '') {\n            let subName = \"Untitled List\"\n            let num = 1\n            \n            while (namesOnList.includes(subName)) {\n                subName = `Untitled List (${num})`;\n                num++\n            }\n            onRenameList(currentList.id, subName);\n        } else if (!namesOnList.includes(currentList.title)){\n            onRenameList(currentList.id, currentList.title);\n        } else if (namesOnList.includes(currentList.title)) {\n            let subName = currentList.title;\n            let num = 1;\n\n            while (namesOnList.includes(subName)) {\n                subName = `${subName} (${num})`\n                num++\n            }\n            onRenameList(currentList.id, subName);\n        }\n    }\n\n    return (\n        <Name \n            ref={ ref }\n            currentList={ currentList }\n            lists={ lists }\n            onSetList={ onSetList }\n            onSubmit={ onSubmit }\n        />\n    )\n});\n\nNameContainer.propTypes = {\n    currentList: PropTypes.object.isRequired,\n    lists: PropTypes.array.isRequired,\n    onRenameList: PropTypes.func.isRequired,\n    onSetList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentList: state.current.list,\n    lists: state.lists\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetList(id, title) {\n        dispatch(\n            setList(id, title)\n        )\n    },\n\n    onRenameList(id, name) {\n        dispatch(\n            setList(id, name)\n        )\n\n        dispatch(\n            renameList(id, name)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef: true})(NameContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst TodaysDate = ({name}) => (\n    <span style={{display: name === \"My Day\" ? 'block' : 'none'}}>\n        { moment(new Date()).format('dddd, MMMM D') }\n    </span>\n);\n\nTodaysDate.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default TodaysDate;","const todoMenu = [\n    {\n        \"id\": \"sortTasks\",\n        \"size\": '1.3rem',\n        \"icon\": \"format_line_spacing\",\n        \"caption\": \"Sort\",\n        \"children\": [\n            {\n                \"id\": \"importantStatus\",\n                \"size\": '1.3rem',\n                \"icon\": \"star_border\",\n                \"caption\": \"Importance\"\n            },\n            {\n                \"id\": \"item\",\n                \"size\": '1.3rem',\n                \"icon\": \"sort_by_alpha\",\n                \"caption\": \"Alphabetically\"\n            },\n            {\n                \"id\": \"date_due\",\n                \"size\": '1.3rem',\n                \"icon\": \"event\",\n                \"caption\": \"Due date\"\n            },\n            {\n                \"id\": \"date_created\",\n                \"size\": '1.3rem',\n                \"icon\": \"library_add\",\n                \"caption\": \"Creation date\"\n            },\n            {\n                \"id\": \"completedStatus\",\n                \"size\": '1.3rem',\n                \"icon\": \"check_circle_outline\",\n                \"caption\": \"Completed\"\n            },\n            {\n                \"id\": \"my_day\",\n                \"size\": '1.3rem',\n                \"icon\": \"wb_sunny\",\n                \"caption\": \"Added to My Day\"\n            }\n        ]\n    },\n    {\n        \"id\": \"changeTheme\",\n        \"size\": '1.3rem',\n        \"icon\": \"color_lens\",\n        \"caption\": \"Change theme\",\n        \"children\": [\n            {\n                \"id\": \"blue\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [80,40,250]\n            },\n            {\n                \"id\": \"red\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [250,70,60]\n            },\n            {\n                \"id\": \"purple\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [100,30,150]\n            },\n            {\n                \"id\": \"green\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [80,160,50]\n            },\n            {\n                \"id\": \"ltblue\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [0,120,255]\n            },\n        ]\n    },\n    {\n        \"id\": \"hideTasks\",\n        \"size\": '1.3rem',\n        \"icon\": \"check_circle_outline\",\n        \"caption\": \"Hide completed tasks\"\n    },\n    {\n        \"id\": \"showTasks\",\n        \"size\": '1.3rem',\n        \"icon\": \"check_circle_outline\",\n        \"caption\": \"Show completed tasks\"\n    }\n]\n\nexport default todoMenu;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { changeBgColor, changeOrder, toggleHide } from '../../../../../../actions/listsActions';\nimport { Icon, ListItemText, Menu, MenuItem } from '@material-ui/core';\nimport { FaCaretRight } from 'react-icons/fa';\nimport MenuTemplate from '../../../../../common/MenuTemplate';\nimport headerMenu from './todoMenu';\n\nconst HeaderMenuContainer = ({anchorEl, open, onClose, lists, selectedListId, onToggleHide=f=>f, onChangeBgColor=f=>f, onChangeOrder=f=>f}) => {\n    const [subAnchorEl, setAnchor] = useState(null);\n    const [subMenuOpen, setMenu] = useState(false);\n    const [value, setValue] = useState(null);\n\n    const handleSubItemClick = (e, item) => {\n        setAnchor(e.currentTarget);\n        setMenu(!subMenuOpen);\n        setValue(item.id);\n    }\n\n    const handleSubMenuClose = () => {\n        setMenu(false);\n    }\n\n    const formatColor = color => {\n        return color ?\n            'rgb(' + color.join(',') + ')' : null\n    }\n\n    const handleSort = item => {\n        item.id === 'hideTasks' || item.id === 'showTasks' ?\n            onToggleHide(selectedListId)\n            :\n            item.icon === 'lens' ?\n                onChangeBgColor(item.color, selectedListId)\n                :\n                onChangeOrder(item.id, selectedListId);\n                setMenu(false);\n                onClose();\n    }\n\n    const renderMenuItems = children => {\n        const selectedList = lists.filter(list => list.id === selectedListId),\n              name = selectedList[0].name,\n              hideCompleted = selectedList[0].hideCompleted,\n              defaultList = selectedList[0].defaultList;\n\n        return children.map(item => {\n            if (item.children) {\n                return (name !== 'Planned' || item.id !== \"sortTasks\") ?\n                    <div key={ item.id }>\n                        <MenuItem\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'space-between'\n                            }}\n                            onClick={e => handleSubItemClick(e, item)}>\n                        \n                            <Icon style={{marginRight: '.5rem', fontSize: item.size}}>\n                                { item.icon }\n                            </Icon>\n\n                            <ListItemText primary={ item.caption } />\n\n                            <FaCaretRight />\n                        </MenuItem>\n\n                        { \n                            value === item.id &&\n                            <Menu\n                                anchorEl={ subAnchorEl }\n                                open={ subMenuOpen }\n                                onClose={ handleSubMenuClose }\n                                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                                transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}>\n\n                                { renderMenuItems(item.children) }\n                            </Menu>\n                        }\n                    </div>\n                    :\n                    null\n            }\n\n            return (\n                (\n                    ((name === 'My Day' && item.id !== 'my_day') && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Important' && (item.id !== 'importantStatus' && item.id !== 'completedStatus') && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Planned' && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Tasks' && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (!defaultList && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks')))\n                ) ?\n                    <MenuItem\n                        key={item.id}\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'space-between'\n                        }}\n                        onClick={() => handleSort(item)}>\n                            <Icon style={{color: formatColor(item.color), marginRight: '.5rem', fontSize: item.size}}>\n                                { item.icon }\n                            </Icon>\n                    \n                            <ListItemText \n                                primary={item.caption} \n                            />\n                    </MenuItem>\n                    :\n                    null\n            )\n        });\n    };\n\n    return (\n        <MenuTemplate \n            anchorEl={ anchorEl }\n            menuArr={ headerMenu }\n            open={ open }\n            onClose={ onClose }\n            renderMenuItems={ renderMenuItems }\n        />\n    )\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n    onChangeBgColor(color, id) {\n        dispatch(\n            changeBgColor(color, id)\n        )\n    },\n\n    onChangeOrder(order, id) {\n        dispatch(\n            changeOrder(order, id)\n        )\n    },\n\n    onToggleHide(id) {\n        dispatch(\n            toggleHide(id)\n        )\n    }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderMenuContainer);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { FaEllipsisH } from 'react-icons/fa';\nimport HeaderMenu from './HeaderMenuContainer';\n\nconst HeaderButton = ({buttonColor}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleButtonClick = e => {\n        setAnchorEl(e.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <React.Fragment>\n            <Button\n                variant=\"contained\"\n                style={{\n                    minWidth: 30, \n                    color: 'white',\n                    backgroundColor: buttonColor\n                }}\n                onClick={ handleButtonClick }>\n\n                <FaEllipsisH />\n            </Button>\n\n            <HeaderMenu\n                open={ Boolean(anchorEl) }\n                onClose={ handleMenuClose }\n                anchorEl={ anchorEl }\n            />\n        </React.Fragment>\n    );\n};\n\nHeaderButton.propTypes = {\n    buttonColor: PropTypes.string.isRequired\n};\n\nexport default HeaderButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Name from './NameContainer';\nimport TodaysDate from './TodaysDate';\nimport HeaderButton from './MenuButton/HeaderButton';\n\nconst Title = React.forwardRef(({name, formatColor, secondaryColor}, ref) => (\n    <header className=\"header align-center space-between\" style={{backgroundColor: formatColor()}}>\n        <div style={{width: '100%'}}>\n            <Name ref={ref} />\n\n            <TodaysDate name={name} />\n        </div>\n\n        <HeaderButton buttonColor={ secondaryColor() } />\n    </header>\n));\n\nTitle.propTypes = {\n    name: PropTypes.string.isRequired,\n    formatColor: PropTypes.func.isRequired,\n    secondaryColor: PropTypes.func.isRequired\n};\n \nexport default Title;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaTimes } from 'react-icons/fa';\n\nconst SortBar = ({barColor, selectedList, selectedListId, getOrderBy=f=>f, getDirIcon=f=>f, onChange=f=>f, onClear=f=>f}) => {\n    return selectedList[0].sorted ?\n        <div className=\"sort-bar align-center space-between\" style={{ backgroundColor: barColor }}>\n            <div onClick={() => onChange(selectedListId)}>\n                Sorted { getOrderBy() } { getDirIcon() }\n            </div>\n            \n            <FaTimes onClick={ () => onClear(selectedListId) }/>\n        </div>\n        :\n        null\n};\n\nSortBar.propTypes = {\n    barColor: PropTypes.string.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    getOrderBy: PropTypes.func.isRequired,\n    getDirIcon: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func,\n};\n\nexport default SortBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeDir, changeOrder, resetChangeDir } from '../../../../../actions/listsActions';\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa';\nimport SortBar from './SortBar';\n\nconst SortBarContainer = ({barColor, lists, selectedList, selectedListId, onChangeDir=f=>f, onClear=f=>f}) => {\n    const currentList = lists.filter(list => list.id === selectedListId);\n\n    const getOrderBy = () => {\n        const orderBy = currentList[0].orderBy;\n\n        const dict = {\n            'importantStatus': 'by importance',\n            'item': 'alphabetically',\n            'date_due': 'by due date',\n            'date_created': 'by creation date',\n            'completedStatus': 'by completed',\n            'my_day': 'by added to My Day'\n        }\n\n        return dict[orderBy];\n    }\n\n    const getDirIcon = () => {\n        return currentList[0].orderDir === 'asc' ?\n            <FaChevronUp /> : <FaChevronDown />\n    }\n\n    return (\n        <SortBar\n            barColor={ barColor }\n            selectedList={ selectedList }\n            selectedListId={ selectedListId }\n            getOrderBy={ getOrderBy }\n            getDirIcon={ getDirIcon }\n            onChange={ onChangeDir }\n            onClear={ onClear }\n        />\n    )\n};\n    \nSortBarContainer.propTypes = {\n    barColor: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    selectedList: PropTypes.array.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    onChangeDir: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired\n};\n    \nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeDir(id) {\n        dispatch(\n            changeDir(id)\n        )\n    },\n\n    onClear(id) {\n        dispatch(\n            changeOrder('date_created', id)\n        )\n\n        dispatch(\n            resetChangeDir(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBarContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title';\nimport SortBar from './SortBar/SortBarContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        marginLeft: 200,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - 200px)`,\n        },\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100% - ${drawerWidth+200}px)`,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginRight: drawerWidth,\n        },\n    }\n}));\n\nconst Header = React.forwardRef(({name, open, selectedList, formatColor=f=>f, secondaryColor=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}>\n            <Title ref={ref} name={name} formatColor={formatColor} secondaryColor={secondaryColor} />\n\n            <SortBar barColor={ secondaryColor() } selectedList= {selectedList} />\n        </AppBar>\n    );\n});\n\nHeader.propTypes = {\n    name: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedList: PropTypes.array.isRequired,\n    formatColor: PropTypes.func.isRequired,\n    secondaryColor: PropTypes.func.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\n\nconst HeaderContainer = React.forwardRef(({lists, open, selectedListId}, ref) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n\n    const formatColor = () => {\n        return 'rgb(' + selectedList[0].color.join(',') + ')';\n    };\n\n    const secondaryColor = () => {\n        const newArr = selectedList[0].color.map(col => parseInt(col * .6));\n        const newColor = 'rgb(' + newArr.join(',') + ')';\n        return newColor;\n    };\n\n    return (\n        <Header \n            ref={ ref }\n            name={ name }\n            open={ open }\n            selectedList={ selectedList }\n            formatColor={ formatColor }\n            secondaryColor={ secondaryColor }\n        />\n    );\n});\n\nHeaderContainer.propTypes = {\n    lists: PropTypes.array.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedListId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nexport default connect(mapStateToProps, null, null, {forwardRef: true})(HeaderContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport ListBody from './Body';\nimport MoreSection from '../../MoreInfo/MoreInfoContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginRight: -drawerWidth,\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n}));\n\nconst TodoList = React.forwardRef(({filteredTasks, open, selectedList, onOpen=f=>f, onClose=f=>f}, ref) => {\n    const classes = useStyles();\n\n    const mainStyle = () => {\n        return {\n            position: selectedList[0].sorted ? 'relative' : null, \n            top: selectedList[0].sorted ? 30 : null\n        }\n    }\n\n    return (\n        <div style={{flexGrow: 1}} className={classes.root}>\n            <CssBaseline />\n\n            <Header ref={ref} open={open} />\n\n            <main style={ mainStyle() }\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}>\n\n                <div className={classes.drawerHeader} />\n\n                <ListBody tasks={ filteredTasks } onClick={ onOpen } onClose={ onClose } />\n            </main>\n\n            <MoreSection open={ open } onClose={ onClose } />\n        </div>\n    );\n});\n\nTodoList.propTypes = {\n    filteredTasks: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    selectedList: PropTypes.array,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default TodoList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsContainer from './Results/ResultsContainer';\nimport TodoList from './Todolist/TodoList';\n\nconst Main = React.forwardRef(({filteredTasks, open, query, selectedList, onOpen=f=>f, onClose=f=>f}, ref) => {\n    return query ? \n        <ResultsContainer\n            filteredTasks={filteredTasks}\n            open={open}\n            selectedList={selectedList}\n            onOpen={onOpen}\n            onClose={onClose}\n        /> \n        : \n        <TodoList\n            ref={ref}\n            filteredTasks={filteredTasks}\n            open={open}\n            selectedList={selectedList}\n            onOpen={onOpen}\n            onClose={onClose}\n        />\n});\n\nMain.propTypes = {\n    filteredTasks: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    query: PropTypes.string.isRequired,\n    selectedList: PropTypes.array,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default Main;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Main from './Main';\n\nconst MainContainer = React.forwardRef(({lists, query, selectedListId, tasks, open, onClose=f=>f, onOpen=f=>f}, ref) => {\n    let filteredTasks = [],\n        order,\n        selectedList = lists.filter(list => list.id === selectedListId),\n        name = selectedList[0].name,\n        orderBy = selectedList[0].orderBy,\n        orderDir = selectedList[0].orderDir,\n        hideCompleted = selectedList[0].hideCompleted;\n\n    orderDir === 'asc' ? order = 1 : order = -1;\n\n    query ?\n        tasks.forEach(task => {\n            if (\n                (task.item.toLowerCase().indexOf(query) !== -1) ||\n                (task.note.toLowerCase().indexOf(query) !== -1)\n            ){\n                filteredTasks.push(task);\n            }\n        })\n        :\n        filteredTasks = tasks.filter(task => {\n                return task[`${ name.toLowerCase().replace(/ /g,\"_\") }`] || task.list_id === selectedListId\n            })\n            .sort((a,b) => {\n                return (orderBy === 'item' || orderBy === 'date_due' || orderBy === 'date_created') ?\n                    (a[orderBy].toLowerCase() < b[orderBy].toLowerCase()) ? -1 * order : 1 * order\n                    :\n                    (orderDir === 'asc') ?\n                        b[orderBy] - a[orderBy] : a[orderBy] - b[orderBy]\n            })\n            .filter(task => hideCompleted ? !task.completedStatus : task)\n    \n    return (\n        <Main\n            ref={ref}\n            filteredTasks={filteredTasks}\n            selectedList={selectedList}\n            open={open}\n            onOpen={onOpen}\n            onClose={onClose}\n            query={ query }\n        />\n    )\n});\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    query: state.query,\n    selectedListId: state.current.list[\"id\"],\n    tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps, null, null, {forwardRef: true})(MainContainer);","import React from 'react';\nimport { CssBaseline, useMediaQuery} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Sidebar from './Side';\nimport Main from './Main';\n\nconst ResponsiveDrawer = () => {\n    let inputEl = null;\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n    const [openDrawer, setOpen] = React.useState(false)\n\n    const handleDrawerOpen = () => {\n        if (!matches) return\n        setOpen(true);\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    }\n\n    const editClick = () => {\n        if(inputEl) {\n            inputEl.select();\n        }\n    }\n\n    return (\n        <div style={{display: 'flex'}}>\n            <CssBaseline />\n\n            <Sidebar\n                onClose={ handleDrawerClose }\n                onEditClick={ editClick }\n            />\n\n            <Main\n                ref={input => inputEl = input}\n                open={ openDrawer }\n                onOpen={ handleDrawerOpen }\n                onClose={ handleDrawerClose }\n            />\n        </div>\n    );\n};\n\nexport default ResponsiveDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadTasks } from './actions/tasksActions';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.loadTasks();\n    }\n    \n    render() {\n        return (\n            <ResponsiveDrawer />\n        );\n    }\n}\n\nexport default connect(null, { loadTasks })(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}